# Generated by Django 4.1.7 on 2023-03-30 05:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("django_app", "0003_room_message"),
    ]

    operations = [
        migrations.CreateModel(
            name="LoggingModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.SlugField(
                        blank=True,
                        db_column="username_db_column",
                        db_tablespace="username_db_tablespace",
                        default="",
                        error_messages=False,
                        help_text='<small class="text-muted">SlugField [0, 300]</small><hr><br>',
                        max_length=300,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(0),
                            django.core.validators.MaxLengthValidator(300),
                        ],
                        verbose_name="Имя пользователя",
                    ),
                ),
                (
                    "ip",
                    models.GenericIPAddressField(
                        blank=True,
                        db_column="ip_db_column",
                        db_index=True,
                        db_tablespace="ip_db_tablespace",
                        default=None,
                        error_messages=False,
                        help_text='<small class="text-muted">ip[0, 300]</small><hr><br>',
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(0),
                            django.core.validators.MaxLengthValidator(300),
                        ],
                        verbose_name="Ip адрес",
                    ),
                ),
                (
                    "path",
                    models.SlugField(
                        blank=True,
                        db_column="path_field_db_column",
                        db_tablespace="path_field_db_tablespace",
                        default="",
                        error_messages=False,
                        help_text='<small class="text-muted">SlugField [0, 300]</small><hr><br>',
                        max_length=300,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(0),
                            django.core.validators.MaxLengthValidator(300),
                        ],
                        verbose_name="Путь",
                    ),
                ),
                (
                    "method",
                    models.SlugField(
                        blank=True,
                        db_column="method_field_db_column",
                        db_tablespace="method_field_db_tablespace",
                        default="",
                        error_messages=False,
                        help_text='<small class="text-muted">SlugField [0, 300]</small><hr><br>',
                        max_length=300,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(0),
                            django.core.validators.MaxLengthValidator(300),
                        ],
                        verbose_name="Метод",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        blank=True,
                        db_column="text_db_column",
                        db_index=True,
                        db_tablespace="text_db_tablespace",
                        default="",
                        error_messages=False,
                        help_text='<small class="text-muted">TextField [0, 3000]</small><hr><br>',
                        max_length=3000,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(0),
                            django.core.validators.MaxLengthValidator(3000),
                        ],
                        verbose_name="Текст ошибки/исключения/ответа",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        db_column="created_db_column",
                        db_index=True,
                        db_tablespace="created_db_tablespace",
                        default=django.utils.timezone.now,
                        error_messages=False,
                        help_text='<small class="text-muted">DateTimeField</small><hr><br>',
                        null=True,
                        verbose_name="Дата и время создания",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_column="user_db_column",
                        db_tablespace="user_db_tablespace",
                        default=None,
                        error_messages=False,
                        help_text='<small class="text-muted">ForeignKey</small><hr><br>',
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лог",
                "verbose_name_plural": "Admin 5, Логи",
                "ordering": ("-created",),
            },
        ),
    ]
